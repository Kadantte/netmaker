name: Deploy and Test Branch

on:
  pull_request_review:
    types: [submitted]
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_target:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy and test'
        required: true
        default: 'develop'

jobs:
  check-pr-approval:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_review' || github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
    outputs:
      approved: ${{ steps.check.outputs.approved }}
    steps:
      - name: Check if PR is approved or author is a contributor
        id: check
        run: |
          if [[ "${{ github.event.review.state }}" == "approved" ]] || \
             [[ "${{ github.event_name }}" == "pull_request_target" && "${{ github.event.pull_request.state }}" == "open" ]] || \
             [[ "${{ github.event_name }}" == "pull_request" && "${{ github.event.pull_request.author_association }}" =~ ^(OWNER|MEMBER|COLLABORATOR)$ ]]; then
            echo "approved=true" >> $GITHUB_OUTPUT
          else
            echo "approved=false" >> $GITHUB_OUTPUT
          fi

  skip-check:
    runs-on: ubuntu-latest
    needs: [check-pr-approval]
    if: github.event_name == 'workflow_dispatch' || needs.check-pr-approval.outputs.approved == 'true'
    outputs:
      skip: ${{ steps.skip.outputs.skip }}
    steps:
      - id: skip
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: 'always'
  
  getbranch:
    runs-on: ubuntu-latest
    needs: [skip-check, check-pr-approval]
    if: (needs.skip-check.outputs.skip != 'true') && (github.event_name == 'workflow_dispatch' || needs.check-pr-approval.outputs.approved == 'true')
    outputs:
      netclientbranch: ${{ steps.getbranch.outputs.netclientbranch }}
      netmakerbranch: ${{ steps.getbranch.outputs.netmakerbranch }}
    steps:
      - name: Determine branches
        id: determine_branches
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "NETMAKER_BRANCH=${{ github.event.inputs.branch }}" >> $GITHUB_ENV
            echo "NETCLIENT_BRANCH=${{ github.event.inputs.branch }}" >> $GITHUB_ENV
          else
            echo "NETMAKER_BRANCH=${{ github.event.pull_request.head.ref || github.head_ref }}" >> $GITHUB_ENV
            echo "NETCLIENT_BRANCH=develop" >> $GITHUB_ENV
          fi

      - name: Checkout netclient repository
        uses: actions/checkout@v4
        with:
          repository: gravitl/netclient
          fetch-depth: 0

      - name: Check if netclient branch exists and set output
        id: getbranch 
        run: |
          if git ls-remote --heads origin ${{ env.NETCLIENT_BRANCH }} | grep -q ${{ env.NETCLIENT_BRANCH }}; then
            echo "netclient branch ${{ env.NETCLIENT_BRANCH }} exists"
            echo "netclientbranch=${{ env.NETCLIENT_BRANCH }}" >> $GITHUB_OUTPUT
          else
            echo "netclient branch ${{ env.NETCLIENT_BRANCH }} does not exist, using develop"
            echo "netclientbranch=develop" >> $GITHUB_OUTPUT
          fi
          echo "netmakerbranch=${{ env.NETMAKER_BRANCH }}" >> $GITHUB_OUTPUT

  branchtest:
    uses: gravitl/devops/.github/workflows/testdeploybranch.yml@master
    needs: [getbranch, skip-check, check-pr-approval]
    if: (needs.skip-check.outputs.skip != 'true') && (github.event_name == 'workflow_dispatch' || needs.check-pr-approval.outputs.approved == 'true')
    with:
      netclientbranch: ${{ needs.getbranch.outputs.netclientbranch }}
      netmakerbranch: ${{ needs.getbranch.outputs.netmakerbranch }}
      tag: ${{ github.run_id }}-${{ github.run_attempt }}
    secrets: inherit
